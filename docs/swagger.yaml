basePath: /
definitions:
  handlers.LoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  handlers.ProjectRequest:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  handlers.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  handlers.TaskRequest:
    properties:
      description:
        type: string
      due_date:
        type: string
      estimate:
        type: string
      priority:
        type: string
      project_id:
        type: integer
      status:
        type: string
      title:
        type: string
    required:
    - project_id
    - title
    type: object
  handlers.UpdateUserRequest:
    properties:
      email:
        type: string
      name:
        type: string
    required:
    - email
    - name
    type: object
host: localhost:8080
info:
  contact:
    email: luis.sar.cor@gmail.com
    name: Luis Sarmiento
  description: A production-ready task management API with JWT authentication
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Task Management API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: User login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: Login user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Create a new user account with email and password
      parameters:
      - description: User registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
      summary: Register a new user
      tags:
      - auth
  /projects:
    get:
      description: Get list of projects owned by authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get all projects
      tags:
      - projects
    post:
      consumes:
      - application/json
      - application/json
      description: |-
        Create a new project owned by the authenticated user
        Create a new project owned by the authenticated user
      parameters:
      - description: Project creation data
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/handlers.ProjectRequest'
      - description: Project creation data
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/handlers.ProjectRequest'
      produces:
      - application/json
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      - BearerAuth: []
      summary: Create a new project
      tags:
      - projects
      - projects
  /projects/{id}:
    delete:
      description: Delete a specific project owned by authenticated user (only if
        no tasks exist)
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Delete project by ID
      tags:
      - projects
    get:
      description: Get detailed information about a specific project owned by authenticated
        user
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get project by ID
      tags:
      - projects
    put:
      consumes:
      - application/json
      description: Update a specific project owned by authenticated user
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      - description: Project update data
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/handlers.ProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Update project by ID
      tags:
      - projects
  /tasks:
    get:
      description: Get list of tasks assigned to authenticated user with optional
        filtering
      parameters:
      - description: Filter by project ID
        in: query
        name: project_id
        type: integer
      - description: Filter by status
        in: query
        name: status
        type: string
      - description: Filter by priority
        in: query
        name: priority
        type: string
      - description: Filter by estimate
        in: query
        name: estimate
        type: string
      - description: Filter tasks due after date (YYYY-MM-DD)
        in: query
        name: due_date_from
        type: string
      - description: Filter tasks due before date (YYYY-MM-DD)
        in: query
        name: due_date_to
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get all tasks
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: Create a new task in a project owned by the authenticated user
      parameters:
      - description: Task creation data
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/handlers.TaskRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Create a new task
      tags:
      - tasks
  /tasks/{id}:
    delete:
      description: Delete a specific task in a project owned by authenticated user
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Delete task by ID
      tags:
      - tasks
    get:
      description: Get detailed information about a specific task assigned to authenticated
        user
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get task by ID
      tags:
      - tasks
    put:
      consumes:
      - application/json
      description: Update a specific task in a project owned by authenticated user
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: Task update data
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/handlers.TaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Update task by ID
      tags:
      - tasks
  /users/me:
    get:
      description: Get the profile information of the currently authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get current user profile
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update the profile information of the currently authenticated user
      parameters:
      - description: User update data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Update current user profile
      tags:
      - users
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
